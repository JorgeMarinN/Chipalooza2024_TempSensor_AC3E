import numpy as np

# # SS
# -40,1.7241661000679915
# -10,1.5820771833717373
# 20,1.379921116171185
# 50,1.1673966812069974
# 80,0.9008724067634013
# 110,0.6791015390765541
# 130,0.5698821200395934

# # TT
# -40,1.7587165850105275
# -10,1.4956322757931557
# 20,1.2570593787926465
# 50,1.0102043566135193
# 80,0.7516245595472199
# 110,0.523416877649773
# 130,0.346947010937422

# # FF
# -40,1.7225299269214946
# -10,1.4749370258305885
# 20,1.2127451420365303
# 50,0.937029560848697
# 80,0.6830619623488347
# 110,0.3804686602787197
# 130,0.17424839083676494


T = np.array([-40,-10,20,50,80,110,130])
data = np.array([
    1.7587165850105275,
    1.4956322757931557,
    1.2570593787926465,
    1.0102043566135193,
    0.7516245595472199,
    0.523416877649773,
    0.346947010937422,
    ])

data_ss = np.array([
    1.7241661000679915,
    1.5820771833717373,
    1.379921116171185,
    1.1673966812069974,
    0.9008724067634013,
    0.6791015390765541,
    0.5698821200395934
    ])


def function(T):
    b = 1.421
    m = -0.008253

    return m*T + b


expected_data= np.array(list(map(function, T)))


print("Datos simulados", data)
print("Datos estimados", expected_data)
print("Error m√°ximo: ", 100 * max(abs(data - expected_data)) / 1.8)